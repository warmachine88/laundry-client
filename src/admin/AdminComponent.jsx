import React, { useEffect, useRef, useState } from 'react'
import { Link, useNavigate } from 'react-router-dom'
import { useAuth } from '../context/AuthContext';

import {
  Chart as ChartJS,
  CategoryScale,
  LinearScale,
  PointElement,
  LineElement,
  Title,
  Tooltip,
  Legend,
} from 'chart.js';

import { Line } from 'react-chartjs-2';
import AdminAccounts from './AdminAccounts';
import BooksComponent from './BooksComponent';
import { useBooks } from '../context/BooksContext';

ChartJS.register(
  CategoryScale,
  LinearScale,
  PointElement,
  LineElement,
  Title,
  Tooltip,
  Legend
);

export const AdminLogin = ({ allAdmins,admin, setAdmin, setVerifiedMain, inputadmin, setInputAdmin }) => {
    
    const { formLogin,setFormLogin,setAccount,account } = useAuth()

    const [error, setError] = useState({ username: '', password: '' });

    const handleInputs = (e, input) => {
        setInputAdmin((prevState) => ({
            ...prevState,
            [input]: e.target.value
        }));
        setError({ ...error, [input]: '' }); // Clear error when input changes

    };

    const handleChange = (e,input) => {
        setFormLogin({
            ...formLogin,
            [input]: e.target.value
        });
        setError({ ...error, [input]: '' }); // Clear error when input changes
    };


    const handleSubmit = async (e) => {
        e.preventDefault();
        try {
            const response = await fetch('http://localhost:5000/users/login', {
                method: 'POST',
                headers: {
                'Content-Type': 'application/json',
                },
                body: JSON.stringify(formLogin),
            });

            const data = await response.json();
            console.log(data)
            if (data.userProfile.id) {
                localStorage.setItem("userToken", data.token);

                fetch('http://localhost:5000/users/getUserByToken', {
                    method: 'POST',
                    headers: {
                    'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ token:data.token }),
                })
                .then(response => response.json())
                .then(data => {
                    // console.log(data)
                    if (data.user) {
                        // Hide Login and Register links
                        
                        fetch('http://localhost:5000/users/get-all',{
                            method:'GET',
                            headers: {
                            'Content-Type': 'application/json',
                        },
                        })
                        .then(response => response.json())
                        .then(usersData => {
                            const loggedInUserEmail = data.user.username;
        
                            const loggedInUser = usersData.find(user => user.email === loggedInUserEmail);
        
                            if (loggedInUser) {
                                setVerifiedMain(true);
                                setAccount(loggedInUser)
                            }
                        })
                        .catch(error => {
                            console.error(error);
                        });
                    }
                })
                .catch(error => {
                        console.error(error);
                });

            } else {
                console.log(data);
            }
        } catch (error) {
            console.error(error);
        }
    };

    useEffect(() => {
        const local = localStorage.getItem("userToken");
        fetch('http://localhost:5000/users/getUserByToken', {
            method: 'POST',
            headers: {
            'Content-Type': 'application/json',
            },
            body: JSON.stringify({ token:local }),
        })
        .then(response => response.json())
        .then(data => {
            // console.log(data)
            if (data.user) {
                // Hide Login and Register links
                fetch('http://localhost:5000/users/get-all',{
                    method:'GET',
                    headers: {
                    'Content-Type': 'application/json',
                },
                })
                .then(response => response.json())
                .then(usersData => {
                    const loggedInUserEmail = data.user.username;

                    const loggedInUser = usersData.find(user => user.email === loggedInUserEmail);

                    if (loggedInUser) {
                        setVerifiedMain(true);
                        setAccount(loggedInUser)
                    }
                })
                .catch(error => {
                    console.error(error);
                });
            }
        })
        .catch(error => {
                console.error(error);
        });
    },[])

    return (
        <>
        <div className="login-system flex items-center justify-center">
            <div className="circles tp1"></div>
            <div className="circles tp2"></div>
            <div className="circles tp3"></div>
            <div className="circles tp4"></div>
            <div className="container mx-auto contain-box w-4/12">
                <h2 className='py-16 text-2xl'> Admin Login </h2>
                <form action="#">
                    <div className="box-input">
                        <div className="er-it">
                            <div className="input-item">
                                <svg width="18" height="16" viewBox="0 0 18 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M12 11.9999L8 15.9999H18V11.9999H12ZM9.06 3.1899L0 12.2499V15.9999H3.75L12.81 6.93989L9.06 3.1899ZM2.92 13.9999H2V13.0799L9.06 5.9999L10 6.93989L2.92 13.9999ZM15.71 4.0399C16.1 3.6499 16.1 2.9999 15.71 2.6299L13.37 0.289895C13.1825 0.103887 12.9291 -0.000488281 12.665 -0.000488281C12.4009 -0.000488281 12.1475 0.103887 11.96 0.289895L10.13 2.11989L13.88 5.86989L15.71 4.0399Z" fill="#8CBAFF"/>
                                </svg>
                                <div className="dp-inp">
                                    <input 
                                        value={formLogin.email}
                                        onChange={e => handleChange(e, 'email')}
                                        className='px-4' type="text" 
                                        placeholder='Email'
                                    />
                                </div>
                            </div>
                            {error.username && <p className="error-message py-2">{error.username}</p>}
                        </div>
                        <div className="er-it">
                            <div className="input-item">
                                <svg width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M7 16C7.26522 16 7.51957 15.8946 7.70711 15.7071C7.89464 15.5196 8 15.2652 8 15C8 14.7348 7.89464 14.4804 7.70711 14.2929C7.51957 14.1054 7.26522 14 7 14C6.73478 14 6.48043 14.1054 6.29289 14.2929C6.10536 14.4804 6 14.7348 6 15C6 15.2652 6.10536 15.5196 6.29289 15.7071C6.48043 15.8946 6.73478 16 7 16ZM11 16C11.2652 16 11.5196 15.8946 11.7071 15.7071C11.8946 15.5196 12 15.2652 12 15C12 14.7348 11.8946 14.4804 11.7071 14.2929C11.5196 14.1054 11.2652 14 11 14C10.7348 14 10.4804 14.1054 10.2929 14.2929C10.1054 14.4804 10 14.7348 10 15C10 15.2652 10.1054 15.5196 10.2929 15.7071C10.4804 15.8946 10.7348 16 11 16ZM16 15C16 15.2652 15.8946 15.5196 15.7071 15.7071C15.5196 15.8946 15.2652 16 15 16C14.7348 16 14.4804 15.8946 14.2929 15.7071C14.1054 15.5196 14 15.2652 14 15C14 14.7348 14.1054 14.4804 14.2929 14.2929C14.4804 14.1054 14.7348 14 15 14C15.2652 14 15.5196 14.1054 15.7071 14.2929C15.8946 14.4804 16 14.7348 16 15Z" fill="#000"/>
                                    <path fillRule="evenodd" clipRule="evenodd" d="M5.75 6.99984C5.74826 5.72082 6.21349 4.48515 7.05833 3.52487C7.90317 2.56458 9.06951 1.94574 10.3383 1.78455C11.6072 1.62335 12.8912 1.93089 13.9493 2.64941C15.0074 3.36793 15.7669 4.44801 16.085 5.68684C16.1391 5.87443 16.2641 6.03355 16.4336 6.13039C16.6031 6.22724 16.8037 6.25417 16.9928 6.20548C17.1818 6.15678 17.3444 6.0363 17.446 5.86962C17.5477 5.70293 17.5803 5.5032 17.537 5.31284C17.1273 3.72094 16.1508 2.33323 14.7908 1.4101C13.4307 0.486963 11.7805 0.0918494 10.1498 0.298891C8.51912 0.505933 7.02003 1.3009 5.93379 2.53463C4.84756 3.76836 4.24885 5.35607 4.25 6.99984V8.30284C4.023 8.31884 3.81 8.33884 3.608 8.36684C2.708 8.48684 1.95 8.74684 1.348 9.34784C0.746 9.94984 0.488 10.7078 0.367 11.6078C0.25 12.4748 0.25 13.5778 0.25 14.9448V15.0548C0.25 16.4218 0.25 17.5248 0.367 18.3918C0.487 19.2918 0.747 20.0498 1.348 20.6518C1.95 21.2538 2.708 21.5118 3.608 21.6338C4.475 21.7498 5.578 21.7498 6.945 21.7498H15.055C16.422 21.7498 17.525 21.7498 18.392 21.6338C19.292 21.5118 20.05 21.2538 20.652 20.6518C21.254 20.0498 21.512 19.2918 21.634 18.3918C21.75 17.5248 21.75 16.4218 21.75 15.0548V14.9448C21.75 13.5778 21.75 12.4748 21.634 11.6078C21.512 10.7078 21.254 9.94984 20.652 9.34784C20.05 8.74584 19.292 8.48784 18.392 8.36684C17.525 8.24984 16.422 8.24984 15.055 8.24984H6.945C6.522 8.24984 6.124 8.24984 5.75 8.25284V6.99984ZM3.808 9.85284C3.074 9.95184 2.686 10.1328 2.409 10.4088C2.132 10.6858 1.952 11.0738 1.853 11.8088C1.752 12.5638 1.75 13.5648 1.75 14.9998C1.75 16.4348 1.752 17.4358 1.853 18.1918C1.952 18.9258 2.133 19.3138 2.409 19.5908C2.686 19.8678 3.074 20.0478 3.809 20.1468C4.563 20.2478 5.565 20.2498 7 20.2498H15C16.435 20.2498 17.436 20.2478 18.192 20.1468C18.926 20.0478 19.314 19.8668 19.591 19.5908C19.868 19.3138 20.048 18.9258 20.147 18.1908C20.248 17.4358 20.25 16.4348 20.25 14.9998C20.25 13.5648 20.248 12.5628 20.147 11.8078C20.048 11.0738 19.867 10.6858 19.591 10.4088C19.314 10.1318 18.926 9.95184 18.191 9.85284C17.436 9.75184 16.435 9.74984 15 9.74984H7C5.565 9.74984 4.563 9.75184 3.808 9.85284Z" fill="#8CBAFF"/>
                                </svg>
                                <div className="dp-inp">
                                    <input 
                                        value={formLogin.password}
                                        onChange={e => handleChange(e, 'password')}
                                        className='px-4' type="password" 
                                        placeholder='Password'
                                     />
                                </div>
                            </div>
                            {error.password && <p className="error-message py-2">{error.password}</p>}
                        </div>
                    </div>

                    <div className="button-box">
                        <button className='p-2' onClick={handleSubmit}> Login </button>
                    </div>
                </form>
            </div>
        </div>
        </>    
    )
}


export const AdminContainer = ({ theme,setTheme }) => {

    
    const navigate = useNavigate()
    const {allAccounts,setAllAccounts,account} = useAuth()
    const { booksAdmin } = useBooks()
    const [switchBoard,setSwitchBoard] = useState("dashboard")


    const handleLogOut = () => {  
        localStorage.removeItem('userToken')
        
        navigate('/admin')
        window.location.reload(); // Refresh the page

        // setAccount(null)
    }

    const labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July','August', 'September', 'October', 'November', 'December'];
    const [data,setData] = useState({ 
        labels,
        datasets: [
            {
                label: 'Accounts',
                data: 0,
                borderColor: `${theme? "#bcbcbc" : "#FCD651"}`,
                backgroundColor: `${theme? "#bcbcbc" : "#FCD651"}`,
                color:'#000',
            },
            {
                label: 'Bookings',
                data: 0,
                borderColor: `${theme? "#FCD651" : "#ffae3c"}`,
                backgroundColor: `${theme? "#FCD651" : "#ffae3c"}`,
                color:'#000',

            },
        ],
     })

    const options = {
        responsive: true,
        plugins: {
            legend: {
                position: 'top',
                labels: {},
            },
            title: {
                display: true,
                text: 'Data Laundry',
                color: `${!theme ? '#000' : '#fff'}`,
            },
        },
        scales: {
            y: {
                ticks: {
                    stepSize: 1, // Set the step size to 1 to display only integer values
                },
            },
        },
    };



    useEffect(() => {
        const generateAccounts = () => {
            const min = 0;
            const max = allAccounts.length;
            return labels.map(() => Math.floor(Math.random() * (max - min + 1)) + min);
        };

        const generateBooks = () => {
            const min = 0;
            const max = booksAdmin.length;
            return labels.map(() => Math.floor(Math.random() * (max - min + 1)) + min);
        };

        console.log(generateBooks())

        setData((prevData) => ({
            ...prevData,
            datasets: [
                {
                    ...prevData.datasets[0],
                    data: generateAccounts(),
                },
                {
                    ...prevData.datasets[1],
                    data: generateBooks(),
                },
            ],
        }));
        
    }, [account,booksAdmin]);

    return(
        <>
        <section className="container-admin" style={ theme ? 
            { 
                '--var-bg': '#272525', '--var-bg-txt': '#fff', 
                '--var-bg-set':'#2b2f32',
                '--var-st':'#bcbcbc',
                '--var-button-st':'#FCD651',
            } : 
            {
                '--var-bg':'#D4F0FF', '--var-bg-txt': '#000', 
                '--var-bg-set':'#A9D8FA',
                '--var-st':'#FCD651',
                '--var-button-st':'#272525',

            }
        }>
            <nav className='sidebar-admin'>
                <div className="logo-title flex items-center justify-center">
                    <h1> Laundry Management </h1>
                </div>
                <ul>
                    <div className='link-door'> 
                        <svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M9.375 11.5C14.55 11.5 18.75 13.4625 18.75 15.875V19H0V15.875C0 13.4625 4.2 11.5 9.375 11.5ZM17.5 15.875C17.5 14.15 13.8625 12.75 9.375 12.75C4.8875 12.75 1.25 14.15 1.25 15.875V17.75H17.5V15.875ZM9.375 0.25C10.5353 0.25 11.6481 0.710936 12.4686 1.53141C13.2891 2.35188 13.75 3.46468 13.75 4.625C13.75 5.78532 13.2891 6.89812 12.4686 7.71859C11.6481 8.53906 10.5353 9 9.375 9C8.21468 9 7.10188 8.53906 6.28141 7.71859C5.46094 6.89812 5 5.78532 5 4.625C5 3.46468 5.46094 2.35188 6.28141 1.53141C7.10188 0.710936 8.21468 0.25 9.375 0.25ZM9.375 1.5C8.5462 1.5 7.75134 1.82924 7.16529 2.41529C6.57924 3.00134 6.25 3.7962 6.25 4.625C6.25 5.4538 6.57924 6.24866 7.16529 6.83471C7.75134 7.42076 8.5462 7.75 9.375 7.75C10.2038 7.75 10.9987 7.42076 11.5847 6.83471C12.1708 6.24866 12.5 5.4538 12.5 4.625C12.5 3.7962 12.1708 3.00134 11.5847 2.41529C10.9987 1.82924 10.2038 1.5 9.375 1.5Z" fill={ theme ? "white" : "black" } />
                        </svg>
                        <h5>
                            {account?.firstname + " " + account?.lastname } 
                        </h5>
                    </div>
                    <div className='link-door' onClick={ e => setSwitchBoard("dashboard")}> 
                        <svg xmlns="http://www.w3.org/2000/svg" width="27" height="27" viewBox="0 0 27 27" fill="none">
                            <path d="M10.652 12.061H3.06027C2.37177 12.061 1.81152 11.5001 1.81152 10.8095V3.21848C1.81152 2.52998 2.37177 1.96973 3.06027 1.96973H10.652C11.3405 1.96973 11.9007 2.52998 11.9007 3.21848V10.8102C11.9007 11.5001 11.3405 12.061 10.652 12.061ZM3.06027 2.56778C2.88781 2.56796 2.72248 2.63659 2.6006 2.7586C2.47871 2.88061 2.41025 3.04602 2.41025 3.21848V10.8102C2.41025 11.17 2.70185 11.4629 3.06027 11.4629H10.652C10.8247 11.4624 10.9901 11.3934 11.112 11.271C11.2339 11.1486 11.3022 10.9829 11.302 10.8102V3.21848C11.302 3.04602 11.2336 2.88061 11.1117 2.7586C10.9898 2.63659 10.8245 2.56796 10.652 2.56778H3.06027ZM23.9414 12.061H16.3476C16.0163 12.0603 15.6987 11.9281 15.4647 11.6934C15.2307 11.4588 15.0994 11.1409 15.0996 10.8095V3.21848C15.0996 2.52998 15.6591 1.96973 16.3476 1.96973H23.9414C24.2722 1.97026 24.5893 2.10206 24.8231 2.33619C25.0568 2.57032 25.1881 2.88764 25.1881 3.21848V10.8102C25.1881 11.1412 25.0569 11.4588 24.8232 11.6932C24.5895 11.9277 24.2724 12.0599 23.9414 12.061ZM16.3476 2.56778C16.1752 2.56796 16.0099 2.63659 15.888 2.7586C15.7661 2.88061 15.6976 3.04602 15.6976 3.21848V10.8102C15.6976 11.17 15.9892 11.4629 16.3476 11.4629H23.9414C24.2924 11.4629 24.5894 11.1639 24.5894 10.8102V3.21848C24.5896 3.1332 24.573 3.04873 24.5405 2.96988C24.508 2.89103 24.4603 2.81934 24.4002 2.75892C24.34 2.6985 24.2685 2.65052 24.1898 2.61772C24.1111 2.58492 24.0267 2.56795 23.9414 2.56778H16.3476ZM10.652 25.0311H3.06027C2.37177 25.0311 1.81152 24.4709 1.81152 23.7824V16.1886C1.81152 15.4994 2.37177 14.9392 3.06027 14.9392H10.652C11.3405 14.9392 11.9007 15.4994 11.9007 16.1886V23.7817C11.9007 24.4702 11.3405 25.0311 10.652 25.0311ZM3.06027 15.5379C2.88787 15.5383 2.72264 15.607 2.60079 15.7289C2.47895 15.8509 2.41043 16.0162 2.41025 16.1886V23.7817C2.41025 24.1408 2.70185 24.4324 3.06027 24.4324H10.652C10.8245 24.4322 10.9898 24.3636 11.1117 24.2416C11.2336 24.1195 11.302 23.9541 11.302 23.7817V16.1886C11.302 16.0161 11.2336 15.8507 11.1117 15.7287C10.9898 15.6067 10.8245 15.5381 10.652 15.5379H3.06027ZM23.9414 25.0311H16.3476C15.6591 25.0311 15.0996 24.4709 15.0996 23.7824V16.1886C15.0996 15.4994 15.6591 14.9392 16.3476 14.9392H23.9414C24.6286 14.9392 25.1881 15.4994 25.1881 16.1886V23.7817C25.1879 24.1125 25.0566 24.4298 24.8229 24.664C24.5892 24.8982 24.2722 25.0302 23.9414 25.0311ZM16.3476 15.5379C16.1752 15.5383 16.01 15.607 15.8882 15.7289C15.7663 15.8509 15.6978 16.0162 15.6976 16.1886V23.7817C15.6976 24.1408 15.9892 24.4324 16.3476 24.4324H23.9414C24.2992 24.4324 24.5894 24.1408 24.5894 23.7817V16.1886C24.5896 16.1033 24.573 16.0189 24.5405 15.94C24.508 15.8612 24.4603 15.7895 24.4002 15.729C24.34 15.6686 24.2685 15.6206 24.1898 15.5878C24.1111 15.555 24.0267 15.5381 23.9414 15.5379H16.3476Z" fill={ theme ? "white" : "black"}/>
                        </svg>
                        <h5>
                            Dashboard 
                        </h5>
                    </div>
                    <div className='link-door' onClick={ e => setSwitchBoard("bookings")}> 
                        <svg xmlns="http://www.w3.org/2000/svg" width="27" height="27" viewBox="0 0 27 27" fill="none">
                            <path d="M13.5034 23.625C12.1039 23.625 10.7876 23.3595 9.55463 22.8285C8.32237 22.2967 7.25025 21.5753 6.33825 20.664C5.42625 19.7535 4.70438 18.6825 4.17263 17.451C3.64088 16.2195 3.375 14.9036 3.375 13.5034C3.375 12.1039 3.6405 10.7876 4.1715 9.55463C4.70325 8.32237 5.42475 7.25025 6.336 6.33825C7.2465 5.42625 8.3175 4.70438 9.549 4.17263C10.7805 3.64088 12.0964 3.375 13.4966 3.375C14.8961 3.375 16.2124 3.6405 17.4454 4.1715C18.6776 4.70325 19.7497 5.42475 20.6617 6.336C21.5737 7.2465 22.2956 8.3175 22.8274 9.549C23.3591 10.7805 23.625 12.0964 23.625 13.4966C23.625 14.8961 23.3595 16.2124 22.8285 17.4454C22.2967 18.6776 21.5753 19.7497 20.664 20.6617C19.7535 21.5737 18.6825 22.2956 17.451 22.8274C16.2195 23.3591 14.9036 23.625 13.5034 23.625ZM13.5 22.5C16.0125 22.5 18.1406 21.6281 19.8844 19.8844C21.6281 18.1406 22.5 16.0125 22.5 13.5C22.5 10.9875 21.6281 8.85937 19.8844 7.11562C18.1406 5.37187 16.0125 4.5 13.5 4.5C10.9875 4.5 8.85937 5.37187 7.11562 7.11562C5.37187 8.85937 4.5 10.9875 4.5 13.5C4.5 16.0125 5.37187 18.1406 7.11562 19.8844C8.85937 21.6281 10.9875 22.5 13.5 22.5ZM9.69187 17.3081V14.8219L15.6915 8.85038C15.8025 8.75362 15.9172 8.68237 16.0357 8.63663C16.1535 8.59013 16.2716 8.56687 16.3901 8.56687C16.5184 8.56687 16.6448 8.59125 16.7692 8.64C16.8938 8.688 17.007 8.76038 17.109 8.85713L18.1496 9.91913C18.2419 10.0301 18.312 10.1456 18.36 10.2656C18.408 10.3856 18.4324 10.5056 18.4331 10.6256C18.4331 10.7449 18.4099 10.8652 18.3634 10.9867C18.3176 11.109 18.2464 11.2253 18.1496 11.3355L12.1781 17.3081H9.69187ZM10.6875 16.3125H11.7562L15.6566 12.4054L15.1504 11.8485L14.616 11.3209L10.6875 15.2438V16.3125ZM15.1504 11.8485L14.616 11.3209L15.6566 12.4054L15.1504 11.8485Z" fill={ theme ? "white" : "black"}/>
                        </svg>
                        <h5>
                            Bookings 
                        </h5>
                    </div>
                    <div className='link-door' onClick={ e => setSwitchBoard("accounts")}> 
                        <svg xmlns="http://www.w3.org/2000/svg" width="27" height="27" viewBox="0 0 27 27" fill="none">
                            <path d="M6.75 11.8125H16.0312V13.5H6.75V11.8125ZM6.75 16.0312H17.7188V17.7188H6.75V16.0312Z" fill={ theme ? "white" : "black"}/>
                            <path d="M23.625 3.375H3.375C2.92745 3.375 2.49822 3.55279 2.18176 3.86926C1.86529 4.18572 1.6875 4.61495 1.6875 5.0625V21.9375C1.6875 22.3851 1.86529 22.8143 2.18176 23.1307C2.49822 23.4472 2.92745 23.625 3.375 23.625H23.625C24.0726 23.625 24.5018 23.4472 24.8182 23.1307C25.1347 22.8143 25.3125 22.3851 25.3125 21.9375V5.0625C25.3125 4.61495 25.1347 4.18572 24.8182 3.86926C24.5018 3.55279 24.0726 3.375 23.625 3.375ZM23.625 5.0625V6.75H3.375V5.0625H23.625ZM3.375 21.9375V8.4375H23.625V21.9375H3.375Z" fill={ theme ? "white" : "black"}/>
                        </svg>
                        <h5>
                            Accounts 
                        </h5>
                    </div>
                    <div className='link-door' onClick={ e => setSwitchBoard("reports")}> 
                        <svg width="24" height="15" viewBox="0 0 24 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M0.75 14.4525V13.2025H12.6975V14.4525H0.75ZM0.75 8.46625V7.21625H6.3275V8.46625H0.75ZM0.75 2.48125V1.23125H6.3275V2.48125H0.75ZM22.365 14.5L17.505 9.7125C17.0533 10.05 16.5625 10.3113 16.0325 10.4963C15.5025 10.6813 14.9596 10.7738 14.4038 10.7738C13.0004 10.7738 11.8046 10.2887 10.8163 9.31875C9.82625 8.34792 9.33125 7.1625 9.33125 5.7625C9.33125 4.36167 9.82667 3.17583 10.8175 2.205C11.8075 1.235 13.005 0.75 14.41 0.75C15.8142 0.75 17.01 1.235 17.9975 2.205C18.9825 3.17667 19.475 4.35833 19.475 5.75C19.475 6.30583 19.3825 6.84875 19.1975 7.37875C19.0125 7.90792 18.7429 8.39083 18.3888 8.8275L23.25 13.615L22.365 14.5ZM14.4038 9.525C15.4654 9.525 16.3679 9.16 17.1113 8.43C17.8546 7.7 18.2263 6.81083 18.2263 5.7625C18.2263 4.7125 17.8546 3.82292 17.1113 3.09375C16.3679 2.36458 15.4654 2 14.4038 2C13.3421 2 12.4396 2.36458 11.6962 3.09375C10.9529 3.82292 10.5812 4.7125 10.5812 5.7625C10.5812 6.8125 10.9529 7.70167 11.6962 8.43C12.4396 9.15917 13.3421 9.52375 14.4038 9.52375" fill={ theme ? "white" : "black"}/>
                        </svg>
                        <h5>
                            Reports 
                        </h5>
                    </div>
                    <div className='link-door' onClick={ handleLogOut }> 
                        <svg width="25" height="25" viewBox="0 0 25 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M3.18852 24.1666C2.51769 24.1666 1.95769 23.942 1.50852 23.4928C1.05838 23.0427 0.833313 22.4822 0.833313 21.8114V3.18846C0.833313 2.51763 1.05838 1.95763 1.50852 1.50846C1.95769 1.05832 2.51769 0.833252 3.18852 0.833252H12.5277V2.29159H3.18852C2.96491 2.29159 2.75929 2.38492 2.57165 2.57159C2.38498 2.75922 2.29165 2.96485 2.29165 3.18846V21.8114C2.29165 22.035 2.38498 22.2406 2.57165 22.4283C2.75929 22.6149 2.96491 22.7083 3.18852 22.7083H12.5277V24.1666H3.18852ZM19.0071 17.6595L17.9833 16.611L21.3652 13.2291H8.40498V11.7708H21.3652L17.9819 8.38742L19.0071 7.34034L24.1666 12.4999L19.0071 17.6595Z" fill={ theme ? "white" : "black" }/>
                        </svg>

                        <h5>
                            Logout 
                        </h5>
                    </div>
                </ul>
                <div className="settings-dash">
                    <div className="set-body">
                        <div className="set-down">
                            <div className="chg-color">
                            {theme ? 
                                <svg width="31" height="29" viewBox="0 0 31 29" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path d="M29.7188 21.0625H12.2188C11.9287 21.0625 11.6505 21.1777 11.4454 21.3829C11.2403 21.588 11.1251 21.8662 11.1251 22.1562C11.1251 22.4463 11.2403 22.7245 11.4454 22.9296C11.6505 23.1348 11.9287 23.25 12.2188 23.25H22.803C20.562 25.3487 17.609 26.5204 14.5386 26.5291C14.3877 26.5291 14.2346 26.5334 14.0815 26.5291C11.2477 26.4278 8.53882 25.3375 6.42517 23.4472C4.31151 21.557 2.92653 18.9862 2.51068 16.1813C2.09483 13.3764 2.67436 10.5144 4.14866 8.09222C5.62297 5.67004 7.89894 3.84061 10.5815 2.92156C10.0353 5.28966 10.0166 7.74889 10.5268 10.125H12.7657C12.0811 7.36577 12.2295 4.46554 13.1922 1.79063C13.256 1.62561 13.2793 1.44776 13.2604 1.27188C13.2415 1.09601 13.1808 0.927202 13.0834 0.779528C12.986 0.631854 12.8548 0.509587 12.7006 0.422914C12.5464 0.336241 12.3737 0.287671 12.1969 0.28125C12.1327 0.281357 12.0687 0.287214 12.0055 0.29875C8.5237 0.918384 5.39419 2.80419 3.21953 5.59308C1.04488 8.38197 -0.0211733 11.8768 0.226635 15.4046C0.474443 18.9324 2.01859 22.2439 4.56177 24.7014C7.10495 27.1589 10.4674 28.5887 14.0016 28.7155C14.181 28.722 14.3604 28.7155 14.5376 28.7155C16.6998 28.7146 18.8336 28.2222 20.7775 27.2753C22.7215 26.3284 24.4247 24.952 25.7583 23.25H29.7188C30.0089 23.25 30.2871 23.1348 30.4922 22.9296C30.6973 22.7245 30.8126 22.4463 30.8126 22.1562C30.8126 21.8662 30.6973 21.588 30.4922 21.3829C30.2871 21.1777 30.0089 21.0625 29.7188 21.0625Z" fill={ theme ? "white" : "black"}/>
                                <path d="M27.5312 18.875H16.5938C16.3037 18.875 16.0255 18.7598 15.8204 18.5546C15.6152 18.3495 15.5 18.0713 15.5 17.7812C15.5 17.4912 15.6152 17.213 15.8204 17.0079C16.0255 16.8027 16.3037 16.6875 16.5938 16.6875H27.5312C27.8213 16.6875 28.0995 16.8027 28.3046 17.0079C28.5098 17.213 28.625 17.4912 28.625 17.7812C28.625 18.0713 28.5098 18.3495 28.3046 18.5546C28.0995 18.7598 27.8213 18.875 27.5312 18.875ZM25.3438 14.5H12.2188C11.9287 14.5 11.6505 14.3848 11.4454 14.1796C11.2402 13.9745 11.125 13.6963 11.125 13.4062C11.125 13.1162 11.2402 12.838 11.4454 12.6329C11.6505 12.4277 11.9287 12.3125 12.2188 12.3125H25.3438C25.6338 12.3125 25.912 12.4277 26.1171 12.6329C26.3223 12.838 26.4375 13.1162 26.4375 13.4062C26.4375 13.6963 26.3223 13.9745 26.1171 14.1796C25.912 14.3848 25.6338 14.5 25.3438 14.5Z" fill={ theme ? "white" : "black"}/>
                                </svg>
                            : 
                                <svg xmlns="http://www.w3.org/2000/svg" width="35" height="35" viewBox="0 0 35 35" fill="none">
                                <path d="M16.4062 5.46875V2.1875C16.4062 1.89742 16.5215 1.61922 16.7266 1.4141C16.9317 1.20898 17.2099 1.09375 17.5 1.09375C17.7901 1.09375 18.0683 1.20898 18.2734 1.4141C18.4785 1.61922 18.5938 1.89742 18.5938 2.1875V5.46875C18.5938 5.75883 18.4785 6.03703 18.2734 6.24215C18.0683 6.44727 17.7901 6.5625 17.5 6.5625C17.2099 6.5625 16.9317 6.44727 16.7266 6.24215C16.5215 6.03703 16.4062 5.75883 16.4062 5.46875ZM26.25 17.5C26.25 19.2306 25.7368 20.9223 24.7754 22.3612C23.8139 23.8002 22.4473 24.9217 20.8485 25.5839C19.2496 26.2462 17.4903 26.4195 15.793 26.0819C14.0956 25.7443 12.5365 24.9109 11.3128 23.6872C10.0891 22.4635 9.25575 20.9044 8.91813 19.207C8.58051 17.5097 8.75379 15.7504 9.41605 14.1515C10.0783 12.5527 11.1998 11.1861 12.6388 10.2246C14.0777 9.26318 15.7694 8.75 17.5 8.75C19.8199 8.75253 22.044 9.67522 23.6844 11.3156C25.3248 12.956 26.2475 15.1801 26.25 17.5ZM24.0625 17.5C24.0625 16.2021 23.6776 14.9333 22.9565 13.8541C22.2354 12.7749 21.2105 11.9337 20.0114 11.437C18.8122 10.9403 17.4927 10.8104 16.2197 11.0636C14.9467 11.3168 13.7774 11.9418 12.8596 12.8596C11.9418 13.7774 11.3168 14.9467 11.0636 16.2197C10.8104 17.4927 10.9403 18.8122 11.437 20.0114C11.9337 21.2105 12.7749 22.2354 13.8541 22.9565C14.9333 23.6776 16.2021 24.0625 17.5 24.0625C19.2399 24.0607 20.9081 23.3687 22.1384 22.1384C23.3687 20.9081 24.0607 19.2399 24.0625 17.5ZM7.97617 9.52383C8.1814 9.72906 8.45976 9.84436 8.75 9.84436C9.04024 9.84436 9.3186 9.72906 9.52383 9.52383C9.72906 9.3186 9.84436 9.04024 9.84436 8.75C9.84436 8.45976 9.72906 8.1814 9.52383 7.97617L7.33633 5.78867C7.1311 5.58344 6.85274 5.46814 6.5625 5.46814C6.27226 5.46814 5.9939 5.58344 5.78867 5.78867C5.58344 5.9939 5.46814 6.27226 5.46814 6.5625C5.46814 6.85274 5.58344 7.1311 5.78867 7.33633L7.97617 9.52383ZM7.97617 25.4762L5.78867 27.6637C5.58344 27.8689 5.46814 28.1473 5.46814 28.4375C5.46814 28.7277 5.58344 29.0061 5.78867 29.2113C5.9939 29.4166 6.27226 29.5319 6.5625 29.5319C6.85274 29.5319 7.1311 29.4166 7.33633 29.2113L9.52383 27.0238C9.62545 26.9222 9.70606 26.8016 9.76106 26.6688C9.81605 26.536 9.84436 26.3937 9.84436 26.25C9.84436 26.1063 9.81605 25.964 9.76106 25.8312C9.70606 25.6984 9.62545 25.5778 9.52383 25.4762C9.42221 25.3745 9.30157 25.2939 9.16879 25.2389C9.03602 25.1839 8.89371 25.1556 8.75 25.1556C8.60629 25.1556 8.46398 25.1839 8.33121 25.2389C8.19843 25.2939 8.07779 25.3745 7.97617 25.4762ZM26.25 9.84375C26.3937 9.84386 26.536 9.81567 26.6687 9.76077C26.8015 9.70588 26.9222 9.62537 27.0238 9.52383L29.2113 7.33633C29.4166 7.1311 29.5319 6.85274 29.5319 6.5625C29.5319 6.27226 29.4166 5.9939 29.2113 5.78867C29.0061 5.58344 28.7277 5.46814 28.4375 5.46814C28.1473 5.46814 27.8689 5.58344 27.6637 5.78867L25.4762 7.97617C25.323 8.12914 25.2187 8.3241 25.1765 8.53638C25.1342 8.74866 25.1558 8.96871 25.2387 9.16868C25.3215 9.36864 25.4619 9.53952 25.6419 9.65969C25.8219 9.77987 26.0336 9.84392 26.25 9.84375ZM27.0238 25.4762C26.8186 25.2709 26.5402 25.1556 26.25 25.1556C25.9598 25.1556 25.6814 25.2709 25.4762 25.4762C25.2709 25.6814 25.1556 25.9598 25.1556 26.25C25.1556 26.5402 25.2709 26.8186 25.4762 27.0238L27.6637 29.2113C27.7653 29.313 27.8859 29.3936 28.0187 29.4486C28.1515 29.5036 28.2938 29.5319 28.4375 29.5319C28.5812 29.5319 28.7235 29.5036 28.8563 29.4486C28.9891 29.3936 29.1097 29.313 29.2113 29.2113C29.313 29.1097 29.3936 28.9891 29.4486 28.8563C29.5036 28.7235 29.5319 28.5812 29.5319 28.4375C29.5319 28.2938 29.5036 28.1515 29.4486 28.0187C29.3936 27.8859 29.313 27.7653 29.2113 27.6637L27.0238 25.4762ZM6.5625 17.5C6.5625 17.2099 6.44727 16.9317 6.24215 16.7266C6.03703 16.5215 5.75883 16.4062 5.46875 16.4062H2.1875C1.89742 16.4062 1.61922 16.5215 1.4141 16.7266C1.20898 16.9317 1.09375 17.2099 1.09375 17.5C1.09375 17.7901 1.20898 18.0683 1.4141 18.2734C1.61922 18.4785 1.89742 18.5938 2.1875 18.5938H5.46875C5.75883 18.5938 6.03703 18.4785 6.24215 18.2734C6.44727 18.0683 6.5625 17.7901 6.5625 17.5ZM17.5 28.4375C17.2099 28.4375 16.9317 28.5527 16.7266 28.7579C16.5215 28.963 16.4062 29.2412 16.4062 29.5312V32.8125C16.4062 33.1026 16.5215 33.3808 16.7266 33.5859C16.9317 33.791 17.2099 33.9062 17.5 33.9062C17.7901 33.9062 18.0683 33.791 18.2734 33.5859C18.4785 33.3808 18.5938 33.1026 18.5938 32.8125V29.5312C18.5938 29.2412 18.4785 28.963 18.2734 28.7579C18.0683 28.5527 17.7901 28.4375 17.5 28.4375ZM32.8125 16.4062H29.5312C29.2412 16.4062 28.963 16.5215 28.7579 16.7266C28.5527 16.9317 28.4375 17.2099 28.4375 17.5C28.4375 17.7901 28.5527 18.0683 28.7579 18.2734C28.963 18.4785 29.2412 18.5938 29.5312 18.5938H32.8125C33.1026 18.5938 33.3808 18.4785 33.5859 18.2734C33.791 18.0683 33.9062 17.7901 33.9062 17.5C33.9062 17.2099 33.791 16.9317 33.5859 16.7266C33.3808 16.5215 33.1026 16.4062 32.8125 16.4062Z" fill={ theme ? "white" : "black"}/>
                                </svg>                            
                            }

                            </div>
                            <div className="theme-set" onClick={e => setTheme(!theme) }>
                                {theme ? 
                                <h2> Light Theme </h2>
                                : 
                                <h2> Dark Theme </h2>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </nav>

            <section className="dashboard-admin">
                <div className="sector-admin">

                    { switchBoard == "dashboard" ?  
                    <>
                        <div className="f-sector">
                            <div className="card-item">
                                <div className="st-1">
                                    <svg width="19" height="19" viewBox="0 0 19 19" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M9.375 11.5C14.55 11.5 18.75 13.4625 18.75 15.875V19H0V15.875C0 13.4625 4.2 11.5 9.375 11.5ZM17.5 15.875C17.5 14.15 13.8625 12.75 9.375 12.75C4.8875 12.75 1.25 14.15 1.25 15.875V17.75H17.5V15.875ZM9.375 0.25C10.5353 0.25 11.6481 0.710936 12.4686 1.53141C13.2891 2.35188 13.75 3.46468 13.75 4.625C13.75 5.78532 13.2891 6.89812 12.4686 7.71859C11.6481 8.53906 10.5353 9 9.375 9C8.21468 9 7.10188 8.53906 6.28141 7.71859C5.46094 6.89812 5 5.78532 5 4.625C5 3.46468 5.46094 2.35188 6.28141 1.53141C7.10188 0.710936 8.21468 0.25 9.375 0.25ZM9.375 1.5C8.5462 1.5 7.75134 1.82924 7.16529 2.41529C6.57924 3.00134 6.25 3.7962 6.25 4.625C6.25 5.4538 6.57924 6.24866 7.16529 6.83471C7.75134 7.42076 8.5462 7.75 9.375 7.75C10.2038 7.75 10.9987 7.42076 11.5847 6.83471C12.1708 6.24866 12.5 5.4538 12.5 4.625C12.5 3.7962 12.1708 3.00134 11.5847 2.41529C10.9987 1.82924 10.2038 1.5 9.375 1.5Z" fill="white"/>
                                    </svg>
                                    <div className="line"></div>
                                </div>
                                <div className="st-2">
                                    <h1>  Accounts </h1>
                                    <h4> {allAccounts?.length} </h4>
                                </div>

                            </div>

                            <div className="card-item">
                                <div className="st-1">
                                    <svg width="18" height="24" viewBox="0 0 18 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M2.26875 23.25C1.69375 23.25 1.21375 23.0575 0.82875 22.6725C0.442916 22.2867 0.25 21.8063 0.25 21.2313V2.76875C0.25 2.19375 0.442916 1.71375 0.82875 1.32875C1.21375 0.942917 1.69375 0.75 2.26875 0.75H15.7313C16.3063 0.75 16.7863 0.942917 17.1713 1.32875C17.5571 1.71375 17.75 2.19375 17.75 2.76875V21.2313C17.75 21.8063 17.5575 22.2863 17.1725 22.6713C16.7867 23.0571 16.3063 23.25 15.7313 23.25H2.26875ZM2.26875 22H15.7313C15.9229 22 16.0992 21.92 16.26 21.76C16.42 21.5992 16.5 21.4229 16.5 21.2313V2.76875C16.5 2.57708 16.42 2.40083 16.26 2.24C16.0992 2.08 15.9229 2 15.7313 2H14V9.64375L11.5 8.15375L9 9.64375V2H2.26875C2.07708 2 1.90083 2.08 1.74 2.24C1.58 2.40083 1.5 2.57708 1.5 2.76875V21.2313C1.5 21.4229 1.58 21.5992 1.74 21.76C1.90083 21.92 2.07708 22 2.26875 22Z" fill="white"/>
                                    </svg>
                                    <div className="line"></div>
                                </div>
                                <div className="st-2">
                                    <h1>  Bookings </h1>
                                    <h4> {booksAdmin?.length} </h4>
                                </div>
                            </div>  

                            <div className="card-item">
                                <div className="st-1">
                                    <svg width="24" height="15" viewBox="0 0 24 15" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M0.75 14.4525V13.2025H12.6975V14.4525H0.75ZM0.75 8.46625V7.21625H6.3275V8.46625H0.75ZM0.75 2.48125V1.23125H6.3275V2.48125H0.75ZM22.365 14.5L17.505 9.7125C17.0533 10.05 16.5625 10.3113 16.0325 10.4963C15.5025 10.6813 14.9596 10.7738 14.4038 10.7738C13.0004 10.7738 11.8046 10.2887 10.8163 9.31875C9.82625 8.34792 9.33125 7.1625 9.33125 5.7625C9.33125 4.36167 9.82667 3.17583 10.8175 2.205C11.8075 1.235 13.005 0.75 14.41 0.75C15.8142 0.75 17.01 1.235 17.9975 2.205C18.9825 3.17667 19.475 4.35833 19.475 5.75C19.475 6.30583 19.3825 6.84875 19.1975 7.37875C19.0125 7.90792 18.7429 8.39083 18.3888 8.8275L23.25 13.615L22.365 14.5ZM14.4038 9.525C15.4654 9.525 16.3679 9.16 17.1113 8.43C17.8546 7.7 18.2263 6.81083 18.2263 5.7625C18.2263 4.7125 17.8546 3.82292 17.1113 3.09375C16.3679 2.36458 15.4654 2 14.4038 2C13.3421 2 12.4396 2.36458 11.6962 3.09375C10.9529 3.82292 10.5812 4.7125 10.5812 5.7625C10.5812 6.8125 10.9529 7.70167 11.6962 8.43C12.4396 9.15917 13.3421 9.52375 14.4038 9.52375" fill="white"/>
                                    </svg>
                                    <div className="line"></div>
                                </div>
                                <div className="st-2">
                                    <h1>  Reports </h1>
                                    <h4> {} </h4>
                                </div>
                            </div>


                        </div>
                        <div className="s-sector">
                            <Line 
                                options={options} 
                                data={data} 
                            />
                        </div>
                    </>
                    :
                    <></>}
                    { switchBoard == "accounts" ?  
                    <AdminAccounts allAccounts={allAccounts} theme={theme} setAllAccounts={setAllAccounts}  />
                    : <></> }
                    { switchBoard == "bookings" ?  
                    <BooksComponent theme={theme}></BooksComponent>
                    : <></> }


                </div>
            </section>
        </section>
        </>
    )


}



const AdminComponent = () => {

    const { allAccounts } = useAuth()
    const [verifiedAdmin,setVerifiedMain] = useState(false)
    
    const [admin,setAdmin] = useState({ username:"joyboy123", password:"static123"  })
    
    const [allAdmins, setAllAdmins] = useState(null)

    useEffect(() => {
        // Filter out only accounts with type 'admin'
        const admins = allAccounts ? allAccounts.filter(account => account.type === 'admin') : [];
        
        // Set the filtered admins to the state
        setAllAdmins(admins);
    }, []);
    
    const [inputadmin,setInputAdmin] = useState({username:'',password:''})
    const [theme,setTheme] = useState(false)

    return (
        <div className='admin-system-main' style={ theme ? { '--admin-bg':'#242020' } : {'--admin-bg':'#fff' }}>
            {!verifiedAdmin && 
                <AdminLogin 
                    admin={admin} 
                    setAdmin={setAdmin} 
                    setVerifiedMain={setVerifiedMain} 
                    allAdmins={allAdmins}
                    inputadmin={inputadmin} 
                    setInputAdmin={setInputAdmin}
                />
            }
            {verifiedAdmin && <AdminContainer theme={theme} setTheme={setTheme} ></AdminContainer>}
        </div>
    )
}

export default AdminComponent